---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Cloudformation template creating S3 and KMS resources for IAM Identity Center automation
  solution. The s3 bucket stores IAM Identity Center permission sets and
  assignment mapping files and lambda zip files (qs-1t52at7re).
Parameters:
  ICMappingBucketName:
    Type: String
    Description: >-
      The S3 bucket that stores the lambda code as well as permission set and
      mapping definition. It's the same name that is used in
      identity-center-automation.template.
  OrganizationId:
    Type: String
    Description: AWS Organizations ID
  ICAutomationAdminArn:
    Type: String
    Description: >-
      The ARN of IAM Identity Center automation admin IAM role or IAM user. This IAM role(or user) 
      will have permissions to manage S3 bucket, besides ICAutoPipelineCodeBuildRole.
  ICKMSAdminArn:
    Type: String
    Description: >-
      The ARN of IAM role(or user) which will have permissions to manage the IAM Identity Center KMS
      key, besides ICAutoPipelineCodeBuildRole.

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref ICMappingBucketName 
      VersioningConfiguration: 
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  S3BucketPolicy:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: "We can allow * for the Principal as we are limiting access to the Org via a Condition."
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:       
          - Sid: DenyExternalPrincipals
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource: 
              - !Sub arn:aws:s3:::${S3Bucket}
              - !Sub arn:aws:s3:::${S3Bucket}/*
            Condition:
              StringNotEquals:
                aws:PrincipalOrgID: !Ref OrganizationId
          - Sid: SecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*
            Condition:
              Bool:
                "aws:SecureTransport": "false"
          - Sid: ProtectBucketDeletion
            Action:
              - s3:DeleteBucket
            Effect: Deny
            Resource: 
              !Sub 'arn:aws:s3:::${S3Bucket}'
            Principal: 
              AWS: "*"
            Condition:
              ArnNotLike:
                aws:PrincipalArn: 
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/ICAutoPipelineCodeBuildRole"
                  - !Ref ICAutomationAdminArn
          - Sid: AllowObjectUpdate
            Action:
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutObjectTagging
            Effect: Deny
            Principal: "*"
            Resource: 
              !Sub arn:aws:s3:::${S3Bucket}/*
            Condition:
              ArnNotLike:
                aws:PrincipalArn: 
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/ICAutoPipelineCodeBuildRole"
                  - !Ref ICAutomationAdminArn
          - Sid: OnlyUpdatePolicy
            Action:
              - s3:PutBucketPolicy
              - s3:DeleteBucketPolicy
            Effect: Deny
            Principal: "*"
            Resource: 
              !Sub arn:aws:s3:::${S3Bucket}
            Condition:
              ArnNotLike:
                aws:PrincipalArn: 
                  - !Ref ICAutomationAdminArn
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/ICAutoPipelineCodeBuildRole"